from __future__ import annotations
from typing import TextIO

from .model import DTNode


def serialize(root: DTNode) -> str:
    lines: list[str] = []
    lines.append("// Generated by dts-visualizer")
    _write_node(root, lines, 0)
    return "\n".join(lines) + "\n"


def _indent(n: int) -> str:
    return "  " * n


def _write_node(node: DTNode, out: list[str], level: int) -> None:
    if node.path == "/":
        out.append("/ {")
    else:
        out.append(f"{_indent(level)}{node.name} {{")

    # properties
    for k, v in node.properties.items():
        out.append(f"{_indent(level+1)}{k} = {v};")

    # children
    for ch in node.children:
        _write_node(ch, out, level + 1)

    if node.path == "/":
        out.append("};")
    else:
        out.append(f"{_indent(level)}}};")
